---
- block:

   - block:

       - name: Setup node freeze infra
         shell: >
           kubectl create -f {{ daemonset }} -n {{ app_ns }}
         args:
           executable: /bin/bash
         register: result

       - name: Confirm that node freeze chaos ds is running on all nodes
         shell: >
           kubectl get pod -l app=node-freeze
           --no-headers -o custom-columns=:status.phase
           -n {{ app_ns }} | sort | uniq
         args:
           executable: /bin/bash
         register: result
         until: "result.stdout == 'Running'"
         delay: 20
         retries: 15

       - name: Identify the application node
         shell: >
           kubectl get pod {{ app_pod }} -n {{ app_ns }}
           --no-headers -o custom-columns=:spec.nodeName
         args:
            executable: /bin/bash
         register: result

       - name: Record the application node name
         set_fact:
           app_node: "{{ result.stdout }}"

       - name: Record the node freeze chaos pod on given app node
         shell: >
           kubectl get pod -l app=node-freeze -o wide
           -n {{ app_ns }} | grep {{ app_node }}
           | awk '{print $1}'
         args:
           executable: /bin/bash
         register: chaos_pod

       - block:

           - name: Run docker container to trigger memory freeze on app node
             shell: >
                kubectl exec  {{ chaos_pod.stdout }} -n {{ app_ns }}
                docker run {{ docker_image }} python memleak.py &
             args:
               executable: /bin/bash
             ignore_errors: true

           - name: Check the node status after memory consumption.
             shell: kubectl get node {{ app_node }} --no-headers | awk '{print $2}'
             args:
               executable: /bin/bash
             register: node_status
             until: "'NotReady' in node_status.stdout"
             delay: 5
             retries: 120

         when: nodeaction == "memory-freeze"

       - block:

           - name: Run CPU freeze docker container.
             shell: >
               kubectl exec {{ chaos_pod.stdout }} -n {{ app_ns }}
               docker run {{ docker_image }} &
             args:
               executable: /bin/bash
             ignore_errors: true

         when: nodeaction == "cpu-freeze"

     when: platform == "AWS"

  when: action == "node-chaos"

- block:

   - name: Delete node chaos infra
     shell: >
       kubectl delete ds -l app=node-freeze
       -n {{ app_ns }}
     args:
       executable: /bin/bash
     register: result

   - name: Confirm that the node chaos ds is stopped on all nodes
     shell: >
        kubectl get pod -l app=node-freeze
        --no-headers -o custom-columns=:status.phase
        -n {{ app_ns }} | sort | uniq
     args:
       executable: /bin/bash
     register: result
     until: "'Running' not in result.stdout"
     delay: 20
     retries: 15

  when: action == "node_chaos_delete" 
