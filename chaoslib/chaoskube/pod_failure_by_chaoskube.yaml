- name: Setup chaoskube infrastructure
  shell: |
    kubectl apply -f ../Kube-Test/chaoslib/chaoskube/rbac.yaml -n {{ namespace }}
    kubectl apply -f ../Kube-Test/chaoslib/chaoskube/chaoskube.yaml -n {{ namespace }}
  args:
    executable: /bin/bash

- name: Confirm that chaoskube pod is running
  shell: >
    kubectl get pod -l app=chaoskube
    --no-headers -n {{ namespace }}
  args:
    executable: /bin/bash
  register: chaoskube
  until: "'Running' in chaoskube.stdout"
  delay: 2
  retries: 90

- name: Set the chaoskube pod name to variable
  set_fact:
    chaospod: "{{ chaoskube.stdout.split()[0] }}"

- name: Get the name of the volume deployment
  shell: >
    kubectl get deployments -n {{ namespace }}
    -l {{ label }} --no-headers -o=custom-columns=NAME:".metadata.name"
  args:
    executable: /bin/bash
  register: result_deploy

- name: Set the deployment name to variable
  set_fact:
    volume_deploy: "{{ result_deploy.stdout }}"

- name: Get the resourceVersion of the {{ volume_deploy }}
  shell: >
    kubectl get deploy -n {{ namespace }}
    {{ volume_deploy }} -o yaml | grep resourceVersion
    | awk '{print $2}' | sed 's|"||g'
  args:
    executable: /bin/bash
  register: rv_bef
  changed_when: true

- name: Initiate periodic pod failures through chaoskube
  shell: >
    kubectl exec {{ chaospod }} -n {{ namespace }}
    -- timeout -t {{ chaos_duration }} chaoskube
    --labels {{ label }}
    --no-dry-run --interval={{ chaos_interval }}s
    --debug
    --namespaces={{ namespace }}
  args:
    executable: /bin/bash
  register: chaos_result
  ignore_errors: true

- name: Get the resourceVersion of the volume deployment
  shell: >
    kubectl get deploy -n {{ namespace }}
    {{ volume_deploy }} -o yaml | grep resourceVersion
    | awk '{print $2}' | sed 's|"||g'
  args:
    executable: /bin/bash
  register: rv_aft

- name: Compare resourceVersions of volume deployments
  debug:
    msg: "Verified replica pods were restarted by chaoskube"
  failed_when: "rv_bef.stdout | int == rv_aft.stdout | int"

- name: Tear down chaoskube infrastructure
  shell: |
    kubectl delete -f ../Kube-Test/chaoslib/chaoskube/chaoskube.yaml -n {{ namespace }}
    kubectl delete -f ../Kube-Test/chaoslib/chaoskube/rbac.yaml -n {{ namespace }}
  args:
    executable: /bin/bash
